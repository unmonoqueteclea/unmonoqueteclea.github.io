<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
<channel>
<title><![CDATA[@unmonoqueteclea - emacs]]></title>
<description><![CDATA[@unmonoqueteclea - emacs]]></description>
<link>https://unmonoqueteclea.github.io/tag-emacs.html</link>
<lastBuildDate>Mon, 17 Mar 2025 18:28:54 +0100</lastBuildDate>
<item>
  <title><![CDATA[Introducing jira.el: Emacs integration for Jira]]></title>
  <description><![CDATA[
<p>
I've just publised my first <code>Emacs</code> package: <a href="https://github.com/unmonoqueteclea/jira.el">jira.el</a>: an Emacs
integration for <code>Jira</code>.
</p>


<figure id="org2f1851b">
<a href="https://stable.melpa.org/#/jira"><img src="https://stable.melpa.org/packages/jira-badge.svg" alt="jira-badge.svg" class="org-svg"></a>

</figure>

<blockquote>
<p>
If you have no choice but to use Jira, at least do it without leaving Emacs.
</p>
</blockquote>

<p>
<a href="https://github.com/unmonoqueteclea/jira.el">jira.el</a> is an <code>Emacs</code> package that brings the "power" of Atlassian's
<code>Jira</code> right into your editor. It lets you list, filter, and inspect
issues, modify properties, and even add worklogs‚Äîall without leaving
Emacs.
</p>

<pre class="example" id="org0d7d043">
‚ÑπÔ∏è Status &lt;2025-03-17 Mon&gt;: Jira is already part of MELPA! üéâ
</pre>

<p>
Key Features:
</p>

<ul class="org-ul">
<li><b>List &amp; Filter Issues</b>: Quickly view the issues assigned to you (or
your team) and apply custom JQL filters.</li>
<li><b>Issue Details</b>: Open and inspect detailed information about any Jira
issue.</li>
<li><b>Modify Issues</b>: Update properties and add worklogs directly from
your Emacs session.</li>
<li><b>Tempo Integration</b>: Seamlessly display <a href="https://www.tempo.io/">Tempo</a> worklogs to keep track
of time spent on tasks.</li>
</ul>



<figure id="org4a8274d">
<img src="https://unmonoqueteclea.github.io/static/jirael-list-issues.png" alt="jirael-list-issues.png" width="100%">

<figcaption><span class="figure-number">Figure 1: </span>List issues in jira.el</figcaption>
</figure>


<figure id="org2f3147e">
<img src="https://unmonoqueteclea.github.io/static/jirael-list-worklogs.png" alt="jirael-list-worklogs.png" width="100%">

<figcaption><span class="figure-number">Figure 2: </span>List worklogs in jira.el</figcaption>
</figure>


<p>
<a href="https://github.com/unmonoqueteclea/jira.el">jira.el</a> combines a <a href="https://www.gnu.org/software/emacs/manual/html_node/elisp/Tabulated-List-Mode.html">Tabulated List Mode</a>-based UI, with <a href="https://magit.vc/">Magit</a>-like
keyboard-driven menus, a combination loved by <code>Emacs</code> users.
</p>

<p>
Check out the <a href="https://github.com/unmonoqueteclea/jira.el">jira.el</a> documentation on <a href="https://github.com/unmonoqueteclea/jira.el">Github</a> for further details and
usage tips!
</p>
<div class="taglist"><a href="https://unmonoqueteclea.github.io/tags.html">Tags</a>: <a href="https://unmonoqueteclea.github.io/tag-projects.html">projects</a> <a href="https://unmonoqueteclea.github.io/tag-emacs.html">emacs</a> </div>]]></description>
  <category><![CDATA[projects]]></category>
  <category><![CDATA[emacs]]></category>
  <link>https://unmonoqueteclea.github.io/2025-02-28-introducing-jira.el:-emacs-integration-for-jira.html</link>
  <guid>https://unmonoqueteclea.github.io/2025-02-28-introducing-jira.el:-emacs-integration-for-jira.html</guid>
  <pubDate>Fri, 28 Feb 2025 19:20:00 +0100</pubDate>
</item>
<item>
  <title><![CDATA[Emacs: Triggering rsync from dired]]></title>
  <description><![CDATA[
<p>
If you are a heavy <code>Emacs</code> user as me, you will have tried to move files
between different machines using <code>TRAMP</code>. But this approach is not nice
for large files. <code>TRAMP</code> is very slow for large files and it will block
<code>Emacs</code> during the file transfer.
</p>

<p>
Although <a href="https://github.com/stsquad/dired-rsync">dired-rsync</a> could help with that, I decided to write my own
solution, as this is a great usecase for the <a href="https://github.com/xenodium/dwim-shell-command">dwim-shell-command</a>
package I am testing these days.
</p>

<p>
And it turned out that the solution was as easy as this:
</p>

<div class="org-src-container">
<pre class="src src-emacs-lisp">(<span style="color: #6052cf; font-weight: bold;">defun</span> <span style="color: #cf25aa;">mono/dwim-rsync</span> (output)
  <span style="color: #506fa0; font-style: italic;">"Use rsync to move selected files to OUTPUT."</span>
  (<span style="color: #6052cf; font-weight: bold;">interactive</span> <span style="color: #4250ef;">"D"</span>)
  (dwim-shell-command-on-marked-files
   (format <span style="color: #4250ef;">"Moving selected files to %s"</span> output)
   <span style="color: #a65f6a; font-style: italic;">;; </span><span style="color: #a65f6a; font-style: italic;">we need to convert TRAMP ssh syntax (e.g. /ssh:myserver:/home)</span>
   <span style="color: #a65f6a; font-style: italic;">;; </span><span style="color: #a65f6a; font-style: italic;">to rsync syntax (e.g. myserver:/home). For the output file</span>
   <span style="color: #a65f6a; font-style: italic;">;; </span><span style="color: #a65f6a; font-style: italic;">it's easy, but for input files we need to do it in the command,</span>
   <span style="color: #a65f6a; font-style: italic;">;; </span><span style="color: #a65f6a; font-style: italic;">that is where '</span><span style="color: #065fff; font-style: italic;">&lt;&lt;*&gt;&gt;</span><span style="color: #a65f6a; font-style: italic;">' is expanded.</span>
   (<span style="color: #6052cf; font-weight: bold;">let</span> ((clean-output (replace-regexp-in-string <span style="color: #4250ef;">"</span><span style="color: #b6532f;">\</span><span style="color: #4250ef;">/ssh:"</span> <span style="color: #4250ef;">""</span> output))
         (clean-files-cmd <span style="color: #4250ef;">"echo &lt;&lt;*&gt;&gt; | sed '</span><span style="color: #065fff;">s/\\/ssh://g</span><span style="color: #4250ef;">'"</span>))
     (format <span style="color: #4250ef;">"%s | xargs -i rsync -aP {} %s"</span> clean-files-cmd clean-output))
   <span style="color: #ba35af; font-weight: bold;">:utils</span> <span style="color: #4250ef;">"rsync"</span>))
</pre>
</div>

<p>
It could have been a one-liner but I had to add some additional logic
to transform <code>TRAMP</code> paths into valid <code>rsync</code> ones.
</p>

<p>
Now, I just need to select some files in <code>dired</code> and run
<code>mono/dwim-rsync</code>. This will let me specify in the minibuffer any path I
want (local or remote, using <code>ssh</code>), and <code>rsync</code> will be used to copy the
files. Bye, <code>Filezilla</code>!
</p>
<div class="taglist"><a href="https://unmonoqueteclea.github.io/tags.html">Tags</a>: <a href="https://unmonoqueteclea.github.io/tag-emacs.html">emacs</a> </div>]]></description>
  <category><![CDATA[emacs]]></category>
  <link>https://unmonoqueteclea.github.io/2023-01-29-triggering-rsync-from-dired.html</link>
  <guid>https://unmonoqueteclea.github.io/2023-01-29-triggering-rsync-from-dired.html</guid>
  <pubDate>Sun, 29 Jan 2023 19:27:00 +0100</pubDate>
</item>
<item>
  <title><![CDATA[My public dotfiles]]></title>
  <description><![CDATA[
<p>
<b>tldr</b> My dotfiles are now public <a href="https://gitlab.com/unmonoqueteclea/dotfiles">on Gitlab</a> üéâ
</p>

<p>
Publishing one's <b>dotfiles</b> can feel like posting naked pictures. It may
show things that people wouldn't like to see. But I was finally brave
to do it (publishing dotfiles). I think it's fair to publish them, as
I have read many public dotfile repositories before writing mine. You
can find my dotfiles <a href="https://gitlab.com/unmonoqueteclea/dotfiles">on Gitlab</a>.
</p>
<div id="outline-container-orga7a8f23" class="outline-2">
<h2 id="orga7a8f23">GNU stow</h2>
<div class="outline-text-2" id="text-orga7a8f23">
<p>
To keep a repository with all the dotfiles I am using <code>GNU Stow</code>. On its
<a href="https://www.gnu.org/software/stow/">website</a>, <code>GNU Stow</code> is defined as a <b>symlink farm manager</b>. It helps me to
manage automatically symlinks between <code>$HOME</code> (or any other place that
can contain dotfiles) and my dotfiles repository. I included a
<a href="https://gitlab.com/unmonoqueteclea/dotfiles/-/blob/main/makefile">makefile</a> in the repository to automatically create all the needed
links using this tool.
</p>
</div>
</div>
<div id="outline-container-org436ef9d" class="outline-2">
<h2 id="org436ef9d">Emacs config</h2>
<div class="outline-text-2" id="text-org436ef9d">
<p>
The biggest part of my dotfiles repository is my <code>Emacs</code> configuration
in <a href="https://gitlab.com/unmonoqueteclea/dotfiles/-/tree/main/emacs/.emacs.d">emacs/.emacs.d</a>. I have a modularized <code>Emacs</code> configuration, keeping
<code>.el</code> files for things like agenda, theming, keybindings, etc. I try to
add explanations for everything I add there, so I hope they can be
useful to you.
</p>
</div>
</div>
<div id="outline-container-orgbe853db" class="outline-2">
<h2 id="orgbe853db">Secrets</h2>
<div class="outline-text-2" id="text-orgbe853db">
<p>
There are always private things in your dotfiles that you don't want
to show.
</p>

<p>
For instance, in <a href="https://gitlab.com/unmonoqueteclea/dotfiles/-/tree/main/ssh/.ssh">ssh configuration</a>, there are some entries that I want
to keep secret. The solution was easy, I just need to add a new
<code>config.secret</code> file with those entries. That file will be included in
my <code>.gitignore</code> file and, to ensure I can access those entries, I added
the following to my main <a href="https://gitlab.com/unmonoqueteclea/dotfiles/-/blob/main/ssh/.ssh/config">config file</a>:
</p>

<div class="org-src-container">
<pre class="src src-bash">Include config.secret
</pre>
</div>

<p>
All your secret entries will be automatically imported!
</p>

<p>
I also keep some <i>gitignored</i> <code>*.secrets.sh*</code> files that include <b>APIs keys</b>
and similar things.
</p>
</div>
</div>
<div class="taglist"><a href="https://unmonoqueteclea.github.io/tags.html">Tags</a>: <a href="https://unmonoqueteclea.github.io/tag-linux.html">linux</a> <a href="https://unmonoqueteclea.github.io/tag-emacs.html">emacs</a> </div>]]></description>
  <category><![CDATA[linux]]></category>
  <category><![CDATA[emacs]]></category>
  <link>https://unmonoqueteclea.github.io/2022-12-26-my-public-dotfiles.html</link>
  <guid>https://unmonoqueteclea.github.io/2022-12-26-my-public-dotfiles.html</guid>
  <pubDate>Mon, 26 Dec 2022 20:20:00 +0100</pubDate>
</item>
</channel>
</rss>
