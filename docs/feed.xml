<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
	<channel>
		<title>
			<![CDATA[@unmonoqueteclea]]>
		</title>
		<description>
			<![CDATA[@unmonoqueteclea]]>
		</description>
		<link>https://unmonoqueteclea.github.io</link>
		<lastBuildDate>Mon, 26 Dec 2022 20:53:12 +0100</lastBuildDate>
		<item>
			<title>
				<![CDATA[my public dotfiles]]>
			</title>
			<description>
				<![CDATA[
<p>
<b>tldr</b> My dotfiles are now public <a href="https://gitlab.com/unmonoqueteclea/dotfiles">on Gitlab</a> ðŸŽ‰
</p>

<p>
Publishing one's <b>dotfiles</b> can feel like posting naked pictures. It may
show things that people wouldn't like to see. But I was finally brave
to do it (publishing dotfiles). I think it's fair to publish them, as
I have read many public dotfile repositories before writing mine. You
can find my dotfiles <a href="https://gitlab.com/unmonoqueteclea/dotfiles">on Gitlab</a>.
</p>


<div id="outline-container-orga3a7fd1" class="outline-2">
<h2 id="orga3a7fd1">GNU stow</h2>
<div class="outline-text-2" id="text-orga3a7fd1">
<p>
To keep a repository with all the dotfiles I am using <code>GNU Stow</code>. On its
<a href="https://www.gnu.org/software/stow/">website</a>, <code>GNU Stow</code> is defined as a <b>symlink farm manager</b>. It helps me to
manage automatically symlinks between <code>$HOME</code> (or any other place that
can contain dotfiles) and my dotfiles repository. I included a
<a href="https://gitlab.com/unmonoqueteclea/dotfiles/-/blob/main/makefile">makefile</a> in the repository to automatically create all the needed
links using this tool.
</p>
</div>
</div>

<div id="outline-container-orga2429f2" class="outline-2">
<h2 id="orga2429f2">emacs config</h2>
<div class="outline-text-2" id="text-orga2429f2">
<p>
The biggest part of my dotfiles repository is my <code>Emacs</code> configuration
in <a href="https://gitlab.com/unmonoqueteclea/dotfiles/-/tree/main/emacs/.emacs.d">emacs/.emacs.d</a>. I have a modularized <code>Emacs</code> configuration, keeping
<code>.el</code> files for things like agenda, theming, keybindings, etc. I try to
add explanations for everything I add there, so I hope they can be
useful to you.
</p>
</div>
</div>

<div id="outline-container-org0a1cf6e" class="outline-2">
<h2 id="org0a1cf6e">secrets</h2>
<div class="outline-text-2" id="text-org0a1cf6e">
<p>
There are always private things in your dotfiles that you don't want
to show.
</p>

<p>
For instance, in <a href="https://gitlab.com/unmonoqueteclea/dotfiles/-/tree/main/ssh/.ssh">ssh configuration</a>, there are some entries that I want
to keep secret. The solution was easy, I just need to add a new
<code>config.secret</code> file with those entries. That file will be included in
my <code>.gitignore</code> file and, to ensure I can access those entries, I added
the following to my main <a href="https://gitlab.com/unmonoqueteclea/dotfiles/-/blob/main/ssh/.ssh/config">config file</a>:
</p>

<div class="org-src-container">
<pre class="src src-bash">Include config.secret
</pre>
</div>

<p>
All your secret entries will be automatically imported!
</p>

<p>
I also keep some <i>gitignored</i> <code>*.secrets.sh*</code> files that include <b>APIs keys</b>
and similar things.
</p>
</div>
</div>
<div class="taglist"><a href="https://unmonoqueteclea.github.io/tags.html">Tags</a>: <a href="https://unmonoqueteclea.github.io/tag-linux.html">linux</a> <a href="https://unmonoqueteclea.github.io/tag-emacs.html">emacs</a> </div>]]>
			</description>
			<category>
				<![CDATA[linux]]>
			</category>
			<category>
				<![CDATA[emacs]]>
			</category>
			<link>https://unmonoqueteclea.github.io/2022-12-26-my-public-dotfiles.html</link>
			<guid>https://unmonoqueteclea.github.io/2022-12-26-my-public-dotfiles.html</guid>
			<pubDate>Mon, 26 Dec 2022 20:20:00 +0100</pubDate>
		</item>
		<item>
			<title>
				<![CDATA[towards minimalism]]>
			</title>
			<description>
				<![CDATA[
<p>
<b>tldr</b> I moved the blog to an extremely simple static blog generator
with no dependencies, no <code>Javascript</code> and no magic tricks. Just plain
<code>HTML</code> and <code>CSS</code>.
</p>

<p>
If you have been following this blog for some time you will have
noticed that I am not very good at keeping a routine of writing new
blog posts every week (or even every month). There was something that
created a lot of friction in the writing process (even more than the
white paper syndrome): every time I wanted to add new content, usually
after some months with no content, the blog build process was
broken. I spent more time fixing the blog than adding content to
it. This made me move to lightweight blogging systems like <a href="https://jekyllrb.com/">Jekyll</a>. But
it wasn't enough so I decided to embrace minimalism.
</p>

<p>
What is the very minimal list of features that I need in a blogging
framework?:
</p>

<ul class="org-ul">
<li>Convert from markup languages such as <code>markdown</code> or <code>org-mode</code> into
plain <code>html</code></li>
<li>Keep an updated <b>index</b> page</li>
<li>Automatically create a <code>rss.xml</code> file</li>
<li>Automatically create an <b>archive</b> page and, ideally, another page for
each <b>tag</b></li>
</ul>

<p>
Just that. Those are the only things that I need. And that is what
<a href="https://github.com/bastibe/org-static-blog">org-static-blog</a> gives me. One single dependency, integrated into
<code>Emacs</code>, my OS (well&#x2026; my code editor). No <code>Javascript</code>, just pure <code>HTML</code>
and <code>CSS</code>.
</p>
<div class="taglist"><a href="https://unmonoqueteclea.github.io/tags.html">Tags</a>: <a href="https://unmonoqueteclea.github.io/tag-blogging.html">blogging</a> </div>]]>
			</description>
			<category>
				<![CDATA[blogging]]>
			</category>
			<link>https://unmonoqueteclea.github.io/2022-12-26-towards-minimalism.html</link>
			<guid>https://unmonoqueteclea.github.io/2022-12-26-towards-minimalism.html</guid>
			<pubDate>Mon, 26 Dec 2022 12:00:00 +0100</pubDate>
		</item>
	</channel>
</rss>
